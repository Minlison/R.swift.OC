//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

#import <Rswift/Rswift.h>
#import <SWRevealViewController/SWRevealViewController.h>

/// This `.string` struct is generated, and contains static references to 3 localization tables.
@implementation NSObject (string *)   

@end

/// This `.string.generic` struct is generated, and contains static references to 13 localization keys.
@implementation NSString * (generic *)   
/// Value: Lorem ipsum dolor sit amet, consectetur adipiscing elit.
 
+ (NSString * *)loremipsum_:(void *)_ {
     return NSLocalizedString("loremipsum", tableName: "Generic", bundle: R.hostingBundle, comment: "")
}

/// Value: Pre Alpha (| %#@first@ |)
 
+ (NSString * *)correctAlphafirstvalue1:(int *)firstvalue1 {
     return String(format: NSLocalizedString("correct alpha", tableName: "Generic", bundle: R.hostingBundle, comment: ""), locale: R.applicationLocale, value1)
}

/// Value: Pre Beta (| %#@first@ x %#@second@ |)
 
+ (NSString * *)correctBetafirstvalue1:(int *)firstvalue1 secondvalue2:(int *)secondvalue2 {
     return String(format: NSLocalizedString("correct beta", tableName: "Generic", bundle: R.hostingBundle, comment: ""), locale: R.applicationLocale, value1, value2)
}

/// Value: Pre Delta (| %#@first@ |)
 
+ (NSString * *)correctDeltafirstvalue1:(int *)firstvalue1 secondvalue2:(int *)secondvalue2 {
     return String(format: NSLocalizedString("correct delta", tableName: "Generic", bundle: R.hostingBundle, comment: ""), locale: R.applicationLocale, value1, value2)
}

/// Value: Pre Epsilon (| %#@first@ |)
 
+ (NSString * *)correctEpsilonfirstvalue1:(int *)firstvalue1 secondvalue2:(int *)secondvalue2 {
     return String(format: NSLocalizedString("correct epsilon", tableName: "Generic", bundle: R.hostingBundle, comment: ""), locale: R.applicationLocale, value1, value2)
}

/// Value: Pre Eta (| %@ - %#@second@ - %d|)
 
+ (NSString * *)correctEta_value1:(NSString * *)_value1 secondvalue2:(int *)secondvalue2 _value3:(int *)_value3 {
     return String(format: NSLocalizedString("correct eta", tableName: "Generic", bundle: R.hostingBundle, comment: ""), locale: R.applicationLocale, value1, value2, value3)
}

/// Value: Pre Gamma (| %2$#@second@ x %1$#@first@ |)
 
+ (NSString * *)correctGammafirstvalue1:(int *)firstvalue1 secondvalue2:(int *)secondvalue2 {
     return String(format: NSLocalizedString("correct gamma", tableName: "Generic", bundle: R.hostingBundle, comment: ""), locale: R.applicationLocale, value1, value2)
}

/// Value: Pre Theta (| %#@first@ |)
 
+ (NSString * *)correctThetafirstvalue1:(int *)firstvalue1 secondvalue2:(int *)secondvalue2 thirdvalue3:(int *)thirdvalue3 {
     return String(format: NSLocalizedString("correct theta", tableName: "Generic", bundle: R.hostingBundle, comment: ""), locale: R.applicationLocale, value1, value2, value3)
}

/// Value: Pre Zeta (| %@ %2$#@second@ |)
 
+ (NSString * *)correctZeta_value1:(NSString * *)_value1 secondvalue2:(int *)secondvalue2 {
     return String(format: NSLocalizedString("correct zeta", tableName: "Generic", bundle: R.hostingBundle, comment: ""), locale: R.applicationLocale, value1, value2)
}

/// Value: four  - %.2f
 
+ (NSString * *)precision4_value1:(double *)_value1 {
     return String(format: NSLocalizedString("precision4", tableName: "Generic", bundle: R.hostingBundle, comment: ""), locale: R.applicationLocale, value1)
}

/// Value: one   - %012.2f
 
+ (NSString * *)precision1_value1:(double *)_value1 {
     return String(format: NSLocalizedString("precision1", tableName: "Generic", bundle: R.hostingBundle, comment: ""), locale: R.applicationLocale, value1)
}

/// Value: three - %12.4f
 
+ (NSString * *)precision3_value1:(double *)_value1 {
     return String(format: NSLocalizedString("precision3", tableName: "Generic", bundle: R.hostingBundle, comment: ""), locale: R.applicationLocale, value1)
}

/// Value: two   - %12.2f
 
+ (NSString * *)precision2_value1:(double *)_value1 {
     return String(format: NSLocalizedString("precision2", tableName: "Generic", bundle: R.hostingBundle, comment: ""), locale: R.applicationLocale, value1)
}
@end



/// This `.string.localizable` struct is generated, and contains static references to 4 localization keys.
@implementation NSString * (localizable *)   
/// en translation: 2
/// 
/// Locales: en, es, ja
 
+ (NSString * *)two_:(void *)_ {
     return NSLocalizedString("two", bundle: R.hostingBundle, comment: "")
}

/// en translation: One
/// 
/// Locales: en, es, ja
 
+ (NSString * *)one_:(void *)_ {
     return NSLocalizedString("one", bundle: R.hostingBundle, comment: "")
}

/// en translation: There are %d lights!
/// 
/// Locales: en, es, ja
 
+ (NSString * *)quote_value1:(int *)_value1 {
     return String(format: NSLocalizedString("quote", bundle: R.hostingBundle, comment: ""), locale: R.applicationLocale, value1)
}

/// ja translation: Not translated in other languages, and there is no Base
/// 
/// Locales: ja
 
+ (NSString * *)japaneseOnly_:(void *)_ {
     return NSLocalizedString("japanese only", bundle: R.hostingBundle, comment: "")
}
@end



/// This `.string.settings` struct is generated, and contains static references to 10 localization keys.
@implementation NSString * (settings *)   
/// Base translation: %1$#@lu_completed_runs@
/// 
/// Locales: Base, nl
 
+ (NSString * *)scopeLuOutOfLuRunslu_completed_runsvalue1:(uint *)lu_completed_runsvalue1 lu_total_runsvalue2:(uint *)lu_total_runsvalue2 {
     return String(format: NSLocalizedString("scope.%lu out of %lu runs", tableName: "Settings", bundle: R.hostingBundle, value: "%1$#@lu_completed_runs@", comment: ""), locale: R.applicationLocale, value1, value2)
}

/// Base translation: %1$d of %2$i files copied, %3$f.2%% completed.
/// 
/// Locales: Base, nl
 
+ (NSString * *)copyProgress_value1:(int *)_value1 _value2:(int *)_value2 _value3:(double *)_value3 {
     return String(format: NSLocalizedString("Copy.Progress", tableName: "Settings", bundle: R.hostingBundle, value: "%1$d of %2$i files copied, %3$f.2%% completed.", comment: ""), locale: R.applicationLocale, value1, value2, value3)
}

/// Base translation: ABC "\DEF/" GHI Base
/// 
/// Locales: Base, nl
 
+ (NSString * *)multilineKeyWeird_:(void *)_ {
     return NSLocalizedString("Multiline\t\\key/\n\"weird\"?!", tableName: "Settings", bundle: R.hostingBundle, value: "ABC\n\"\\DEF/\"\nGHI Base", comment: "")
}

/// Base translation: Base %#@first@
/// 
/// Locales: Base
 
+ (NSString * *)incorrectInDutchfirstvalue1:(int *)firstvalue1 {
     return String(format: NSLocalizedString("incorrect in dutch", tableName: "Settings", bundle: R.hostingBundle, value: "Base %#@first@", comment: ""), locale: R.applicationLocale, value1)
}

/// Base translation: Base language; Not translated
/// 
/// Locales: Base
 
+ (NSString * *)notTranslated_:(void *)_ {
     return NSLocalizedString("Not translated", tableName: "Settings", bundle: R.hostingBundle, value: "Base language; Not translated", comment: "")
}

/// Base translation: Nothing
/// 
/// Locales: Base, nl
 
+ (NSString * *)formatSpecifiers3_value1:(int *)_value1 _value2:(int *)_value2 _value3:(NSString * *)_value3 {
     return String(format: NSLocalizedString("FormatSpecifiers3", tableName: "Settings", bundle: R.hostingBundle, value: "Nothing", comment: ""), locale: R.applicationLocale, value1, value2, value3)
}

/// Base translation: Settings
/// 
/// Locales: Base, nl
 
+ (NSString * *)title_:(void *)_ {
     return NSLocalizedString("Title", tableName: "Settings", bundle: R.hostingBundle, value: "Settings", comment: "")
}

/// Base translation: We need a couple things before you get started.
/// 
/// Locales: Base, nl
 
+ (NSString * *)weNeedACoupleThingsBeforeYouGetStarted_:(void *)_ {
     return NSLocalizedString("We need a couple things\r\nbefore you get started.", tableName: "Settings", bundle: R.hostingBundle, value: "We need a couple things\r\nbefore you get started.", comment: "")
}

/// Base translation: number 1: %1$d
/// 
/// Locales: Base, nl
 
+ (NSString * *)formatSpecifiers4_value1:(int *)_value1 _value2:(int *)_value2 _value3:(NSString * *)_value3 {
     return String(format: NSLocalizedString("FormatSpecifiers4", tableName: "Settings", bundle: R.hostingBundle, value: "number 1: %1$d", comment: ""), locale: R.applicationLocale, value1, value2, value3)
}

/// Base translation: number 1: %d, number 2: %i, string 3: %@
/// 
/// Locales: Base, nl
 
+ (NSString * *)formatSpecifiers1_value1:(int *)_value1 _value2:(int *)_value2 _value3:(NSString * *)_value3 {
     return String(format: NSLocalizedString("FormatSpecifiers1", tableName: "Settings", bundle: R.hostingBundle, value: "number 1: %d, number 2: %i, string 3: %@", comment: ""), locale: R.applicationLocale, value1, value2, value3)
}
@end


